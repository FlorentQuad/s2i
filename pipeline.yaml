apiVersion: v1
items:
- apiVersion: tekton.dev/v1beta1
  kind: Pipeline
  metadata:
    labels:
      template: s2i
    name: s2i
  spec:
    finally:
    - name: step-final
      taskSpec:
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          script: |
            #!/usr/bin/env bash

            echo "Everything Finished"
    params:
    - name: git-url
      type: string
    tasks:
    - name: step-0
      params:
      - name: url
        value: $(params.git-url)
      taskRef:
        name: git-clone
      workspaces:
      - name: output
        workspace: code-clone
    - name: step-1
      runAfter:
      - fetch-repo
      taskSpec:
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: test
          script: |
            #!/usr/bin/env bash
            echo "---- Print index.php  ----"
            cat /workspace/source/index.php
            echo "--------------------------"
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli
          name: build
          script: |
            #!/usr/bin/env bash
            echo "---- Trigger Build ----"
            oc start-build bc/s2i
            echo "-----------------------"
      workspaces:
      - name: source
        workspace: code-clone
    workspaces:
    - name: code-clone
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      template: s2i
    name: build-bot
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      template: s2i
    name: rolebinding-build-bot
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: build-bot
    namespace: meijerflorent-dev
- apiVersion: triggers.tekton.dev/v1beta1
  kind: TriggerBinding
  metadata:
    labels:
      template: s2i
    name: s2i-trigger-binding
  spec:
    params:
    - name: git-url
      value: $(body.repository.url)
- apiVersion: triggers.tekton.dev/v1beta1
  kind: TriggerTemplate
  metadata:
    labels:
      template: s2i
    name: s2i-trigger-template
  spec:
    params:
    - name: git-url
    resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: pipeline-run-
      spec:
        params:
        - name: git-url
          value: $(tt.params.git-url)
        pipelineRef:
          name: s2i
        serviceAccountName: build-bot
        workspaces:
        - name: code-clone
          volumeClaimTemplate:
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
- apiVersion: triggers.tekton.dev/v1beta1
  kind: Trigger
  metadata:
    labels:
      template: s2i
    name: s2i-trigger
  spec:
    bindings:
    - ref: s2i-trigger-binding
    interceptors:
    - params:
      - name: secretRef
        value:
          secretKey: secretToken
          secretName: github-secret-webhook
      - name: eventTypes
        value:
        - push
      ref:
        name: github
    serviceAccountName: pipeline
    template:
      ref: s2i-trigger-template
- apiVersion: triggers.tekton.dev/v1beta1
  kind: EventListener
  metadata:
    labels:
      template: s2i
    name: s2i-eventlistener
  spec:
    serviceAccountName: pipeline
    triggers:
    - triggerRef: s2i-trigger
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      template: s2i
    name: github-secret-webhook
  stringData:
    secretToken: QUADSolutions
  type: Opaque
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      template: s2i
    name: el-s2i-eventlistener-route
  spec:
    port:
      targetPort: http-listener
    tls:
      insecureEdgeTerminationPolicy: None
      termination: edge
    to:
      kind: Service
      name: el-s2i-eventlistener
      weight: 100
    wildcardPolicy: None
kind: List
metadata: {}
